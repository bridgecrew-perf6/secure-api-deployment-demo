{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "14788875220285797675"
    }
  },
  "parameters": {
    "systemName": {
      "type": "string",
      "maxLength": 8
    },
    "locationAbbreviation": {
      "type": "string",
      "maxLength": 3
    },
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "Dev",
        "Test",
        "Acc",
        "Prod"
      ]
    },
    "basicAppSettings": {
      "type": "array",
      "defaultValue": [
        {
          "name": "WEBSITE_RUN_FROM_PACKAGE",
          "value": "1"
        }
      ]
    },
    "sqlServerPassword": {
      "type": "secureString"
    },
    "sqlServerUsername": {
      "type": "string"
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ]
    },
    "sqlServerDatabaseSku": {
      "type": "object",
      "defaultValue": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 10
      }
    }
  },
  "variables": {
    "resourceGroupName": "[toLower(format('{0}-{1}-{2}', parameters('systemName'), parameters('environmentName'), parameters('locationAbbreviation')))]",
    "defaultResourceName": "[toLower(format('{0}-{1}-{2}', parameters('systemName'), parameters('environmentName'), parameters('locationAbbreviation')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[deployment().location]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vnetModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          },
          "systemName": {
            "value": "[parameters('systemName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "7403305721282070330"
            }
          },
          "parameters": {
            "systemName": {
              "type": "string"
            },
            "defaultResourceName": {
              "type": "string"
            }
          },
          "variables": {
            "vnetAddressPrefixes": [
              "10.0.0.0/16"
            ],
            "subnets": [
              {
                "name": "SqlData",
                "prefix": "10.0.0.0/24",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "serviceEndpoints": [],
                "delegations": []
              },
              {
                "name": "Website",
                "prefix": "10.0.1.0/24",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "serviceEndpoints": [],
                "delegations": []
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "vNetModule",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "defaultResourceName": {
                    "value": "[parameters('defaultResourceName')]"
                  },
                  "addressPrefixes": {
                    "value": "[variables('vnetAddressPrefixes')]"
                  },
                  "subnets": {
                    "value": "[variables('subnets')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1124.51302",
                      "templateHash": "6626276142427928161"
                    }
                  },
                  "parameters": {
                    "defaultResourceName": {
                      "type": "string"
                    },
                    "addressPrefixes": {
                      "type": "array"
                    },
                    "subnets": {
                      "type": "array"
                    }
                  },
                  "variables": {
                    "resourceName": "[format('{0}-vnet', parameters('defaultResourceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('resourceName')]",
                      "location": "[resourceGroup().location]",
                      "properties": {
                        "copy": [
                          {
                            "name": "subnets",
                            "count": "[length(parameters('subnets'))]",
                            "input": {
                              "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                              "properties": {
                                "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].prefix]",
                                "privateEndpointNetworkPolicies": "[parameters('subnets')[copyIndex('subnets')].privateEndpointNetworkPolicies]",
                                "privateLinkServiceNetworkPolicies": "[parameters('subnets')[copyIndex('subnets')].privateLinkServiceNetworkPolicies]",
                                "serviceEndpoints": "[parameters('subnets')[copyIndex('subnets')].serviceEndpoints]",
                                "delegations": "[parameters('subnets')[copyIndex('subnets')].delegations]"
                              }
                            }
                          }
                        ],
                        "addressSpace": {
                          "addressPrefixes": "[parameters('addressPrefixes')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "resourceName": {
                      "type": "string",
                      "value": "[variables('resourceName')]"
                    },
                    "subscriptionResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('resourceName'))]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "applicationInsightModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "10165406266915705470"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            }
          },
          "variables": {
            "resourceName": "[format('{0}-ai', parameters('defaultResourceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('resourceName')]",
              "location": "[resourceGroup().location]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            }
          ],
          "outputs": {
            "applicationInsightsName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            },
            "instrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('resourceName'))).InstrumentationKey]"
            },
            "appConfiguration": {
              "type": "array",
              "value": [
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(resourceId('Microsoft.Insights/components', variables('resourceName'))).InstrumentationKey]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storageModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          },
          "skuName": {
            "value": "[parameters('storageAccountSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "12593178978643894257"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
              ]
            }
          },
          "variables": {
            "resourceName": "[toLower(replace(parameters('defaultResourceName'), '-', ''))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[variables('resourceName')]",
              "kind": "StorageV2",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "[parameters('skuName')]"
              }
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('resourceName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('resourceName')), '2021-02-01').keys[0].value)]"
            },
            "secret": {
              "type": "object",
              "value": {
                "name": "AzureStorageAccount",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('resourceName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('resourceName')), '2021-02-01').keys[0].value)]"
              }
            },
            "secretName": {
              "type": "string",
              "value": "StorageAccountConnectionString"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appServicePlan",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "986788735435091523"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "app",
              "allowedValues": [
                "functionapp",
                "linux",
                "app"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "B1",
                "capacity": 1
              }
            }
          },
          "variables": {
            "resourceName": "[format('{0}-plan', parameters('defaultResourceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[variables('resourceName')]",
              "location": "[resourceGroup().location]",
              "kind": "[parameters('kind')]",
              "sku": {
                "name": "[parameters('sku').name]",
                "capacity": "[parameters('sku').capacity]"
              }
            }
          ],
          "outputs": {
            "servicePlanName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "webAppModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'appServicePlan'), '2020-10-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "10915119251519575497"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "appServicePlanId": {
              "type": "string"
            }
          },
          "variables": {
            "resourceName": "[format('{0}-app', parameters('defaultResourceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-12-01",
              "name": "[variables('resourceName')]",
              "location": "[resourceGroup().location]",
              "kind": "app",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "alwaysOn": true,
                  "ftpsState": "Disabled",
                  "netFrameworkVersion": "v5.0",
                  "http20Enabled": true
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          ],
          "outputs": {
            "servicePrincipal": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('resourceName')), '2020-12-01', 'full').identity.principalId]"
            },
            "webAppName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'appServicePlan')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "15598940788729305677"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ]
            }
          },
          "variables": {
            "resourceName": "[format('{0}-kv', parameters('defaultResourceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-04-01-preview",
              "name": "[variables('resourceName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('sku')]"
                },
                "accessPolicies": [],
                "enableSoftDelete": false
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            },
            "keyVaultUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('resourceName'))).vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlServerModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          },
          "administratorPassword": {
            "value": "[parameters('sqlServerPassword')]"
          },
          "administratorUsername": {
            "value": "[parameters('sqlServerUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "1074152394550660211"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "administratorUsername": {
              "type": "string",
              "defaultValue": ""
            },
            "administratorPassword": {
              "type": "secureString",
              "defaultValue": "[newGuid()]"
            }
          },
          "variables": {
            "resourceName": "[format('{0}-sql', parameters('defaultResourceName'))]",
            "administratorLogin": "[coalesce(parameters('administratorUsername'), format('{0}-admin', parameters('defaultResourceName')))]",
            "dbName": "[format('{0}-sqldb', parameters('defaultResourceName'))]",
            "connectionString": "[format('DATA SOURCE=tcp:{0}{1},1433;USER ID={2};PASSWORD={3};INITIAL CATALOG={4};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', variables('resourceName'), environment().suffixes.sqlServerHostname, parameters('administratorUsername'), parameters('administratorPassword'), variables('dbName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2021-02-01-preview",
              "name": "[variables('resourceName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "administratorLogin": "[variables('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorPassword')]",
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/azure-datacenter', variables('resourceName'))]",
              "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('resourceName'))]"
              ]
            }
          ],
          "outputs": {
            "sqlServerName": {
              "type": "string",
              "value": "[variables('resourceName')]"
            },
            "sqlServerLogin": {
              "type": "string",
              "value": "[variables('administratorLogin')]"
            },
            "sqlServerPassword": {
              "type": "string",
              "value": "[parameters('administratorPassword')]"
            },
            "secret": {
              "type": "object",
              "value": {
                "name": "SqlConnectionString",
                "value": "[variables('connectionString')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlServerDatabaseModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "sku": {
            "value": "[parameters('sqlServerDatabaseSku')]"
          },
          "defaultResourceName": {
            "value": "[variables('defaultResourceName')]"
          },
          "sqlServerLogin": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule'), '2020-10-01').outputs.sqlServerLogin.value]"
          },
          "sqlServerPassword": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule'), '2020-10-01').outputs.sqlServerPassword.value]"
          },
          "sqlServerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule'), '2020-10-01').outputs.sqlServerName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "2762720973223299442"
            }
          },
          "parameters": {
            "defaultResourceName": {
              "type": "string"
            },
            "sqlServerName": {
              "type": "string"
            },
            "sqlServerLogin": {
              "type": "string"
            },
            "sqlServerPassword": {
              "type": "secureString"
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 10
              }
            }
          },
          "variables": {
            "resourceName": "[format('{0}-sqldb', parameters('defaultResourceName'))]",
            "calculatedConnectionString": "[format('DATA SOURCE=tcp:{0}{1},1433;USER ID={2};PASSWORD={3};INITIAL CATALOG={4};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', parameters('sqlServerName'), environment().suffixes.sqlServerHostname, parameters('sqlServerLogin'), parameters('sqlServerPassword'), variables('resourceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}', parameters('sqlServerName'), variables('resourceName'))]",
              "location": "[resourceGroup().location]",
              "sku": "[parameters('sku')]",
              "properties": {}
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[variables('calculatedConnectionString')]"
            },
            "secret": {
              "type": "array",
              "value": [
                {
                  "name": "[format('{0}/{1}', parameters('sqlServerName'), variables('resourceName'))]",
                  "value": "[variables('calculatedConnectionString')]"
                }
              ]
            },
            "secretName": {
              "type": "string",
              "value": "SqlServerConnectionString"
            },
            "databaseName": {
              "type": "string",
              "value": "[parameters('defaultResourceName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storageAccountSecretModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVault": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule'), '2020-10-01').outputs.keyVaultName.value]"
          },
          "secret": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'storageModule'), '2020-10-01').outputs.secret.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "17441909101872622228"
            }
          },
          "parameters": {
            "keyVault": {
              "type": "string"
            },
            "secret": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVault'), parameters('secret').name)]",
              "properties": {
                "value": "[parameters('secret').value]"
              }
            }
          ],
          "outputs": {
            "keyVaultReference": {
              "type": "array",
              "value": [
                {
                  "name": "[parameters('secret').name]",
                  "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}{1}/secrets/{2})', parameters('keyVault'), environment().suffixes.keyvaultDns, parameters('secret').name)]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'storageModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlServerSecretModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVault": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule'), '2020-10-01').outputs.keyVaultName.value]"
          },
          "secret": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule'), '2020-10-01').outputs.secret.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "17441909101872622228"
            }
          },
          "parameters": {
            "keyVault": {
              "type": "string"
            },
            "secret": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVault'), parameters('secret').name)]",
              "properties": {
                "value": "[parameters('secret').value]"
              }
            }
          ],
          "outputs": {
            "keyVaultReference": {
              "type": "array",
              "value": [
                {
                  "name": "[parameters('secret').name]",
                  "value": "[format('@Microsoft.KeyVault(SecretUri=https://{0}{1}/secrets/{2})', parameters('keyVault'), environment().suffixes.keyvaultDns, parameters('secret').name)]"
                }
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultAccessPolicyDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule'), '2020-10-01').outputs.keyVaultName.value]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'webAppModule'), '2020-10-01').outputs.servicePrincipal.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "5255254614826182000"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/add', parameters('keyVaultName'))]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('principalId')]",
                    "permissions": {
                      "keys": [],
                      "secrets": [
                        "get",
                        "list"
                      ],
                      "certificates": [
                        "get",
                        "list",
                        "create"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'webAppModule')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "websiteConfiguration",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'webAppModule'), '2020-10-01').outputs.webAppName.value]"
          },
          "appSettings": {
            "value": "[union(parameters('basicAppSettings'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'applicationInsightModule'), '2020-10-01').outputs.appConfiguration.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'storageAccountSecretModule'), '2020-10-01').outputs.keyVaultReference.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerSecretModule'), '2020-10-01').outputs.keyVaultReference.value)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1124.51302",
              "templateHash": "15047153752219777345"
            }
          },
          "parameters": {
            "webAppName": {
              "type": "string"
            },
            "appSettings": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2020-12-01",
              "name": "[format('{0}/web', parameters('webAppName'))]",
              "properties": {
                "copy": [
                  {
                    "name": "appSettings",
                    "count": "[length(parameters('appSettings'))]",
                    "input": {
                      "name": "[parameters('appSettings')[copyIndex('appSettings')].name]",
                      "value": "[parameters('appSettings')[copyIndex('appSettings')].value]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'applicationInsightModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultAccessPolicyDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlServerSecretModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'storageAccountSecretModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'webAppModule')]"
      ]
    }
  ]
}